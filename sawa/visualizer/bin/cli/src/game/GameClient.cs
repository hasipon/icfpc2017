// Generated by Haxe 3.4.2 (git build master @ 890f8c7)

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace game {
	public class GameClient : global::haxe.lang.HxObject {
		
		public GameClient(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public GameClient(global::haxe.io.Input input, global::haxe.io.Output output) {
			global::game.GameClient.__hx_ctor_game_GameClient(this, input, output);
		}
		
		
		public static void __hx_ctor_game_GameClient(global::game.GameClient __hx_this, global::haxe.io.Input input, global::haxe.io.Output output) {
			__hx_this.stderr = ((global::haxe.io.Output) (new global::cs.io.NativeOutput(((global::System.IO.Stream) (global::System.Console.OpenStandardError()) ))) );
			__hx_this.input = input;
			__hx_this.game = new global::game.Game();
			__hx_this.waitSetup();
		}
		
		
		public static void debug(string @string) {
			((global::haxe.io.Output) (new global::cs.io.NativeOutput(((global::System.IO.Stream) (global::System.Console.OpenStandardError()) ))) ).writeString(global::haxe.lang.Runtime.concat(@string, "\n"));
		}
		
		
		public static object waitData(global::haxe.io.Input input) {
			unchecked {
				global::haxe.io.BytesOutput numberOutput = new global::haxe.io.BytesOutput();
				while (true) {
					int @byte = input.readByte();
					if (( @byte == 58 )) {
						break;
					}
					else {
						numberOutput.writeByte(@byte);
					}
					
				}
				
				global::haxe.lang.Null<int> length = global::Std.parseInt(numberOutput.getBytes().toString());
				global::haxe.io.BytesOutput jsonOutput = new global::haxe.io.BytesOutput();
				{
					int _g1 = 0;
					int _g = (length).@value;
					while (( _g1 < _g )) {
						int i = _g1++;
						int byte1 = input.readByte();
						jsonOutput.writeByte(byte1);
					}
					
				}
				
				string content = jsonOutput.getBytes().toString();
				global::game.GameClient.debug(global::haxe.lang.Runtime.concat("input: ", content));
				return new global::haxe.format.JsonParser(((string) (content) )).parseRec();
			}
		}
		
		
		public static void writeData(global::haxe.io.Output output, object data) {
			string content = global::haxe.format.JsonPrinter.print(data, null, null);
			global::game.GameClient.debug(global::haxe.lang.Runtime.concat("output: ", content));
			global::haxe.io.Bytes bytes = global::haxe.io.Bytes.ofString(content);
			output.writeString(global::Std.@string(bytes.length));
			output.writeString(":");
			output.writeString(content);
		}
		
		
		public global::haxe.io.Output stderr;
		
		public global::haxe.io.Input input;
		
		public global::haxe.io.Output output;
		
		public global::game.Game game;
		
		public virtual void waitSetup() {
			object setupData = global::game.GameClient.waitData(this.input);
			this.game.setup(setupData);
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1147073522:
					{
						this.game = ((global::game.Game) (@value) );
						return @value;
					}
					
					
					case 209784577:
					{
						this.output = ((global::haxe.io.Output) (@value) );
						return @value;
					}
					
					
					case 1042138122:
					{
						this.input = ((global::haxe.io.Input) (@value) );
						return @value;
					}
					
					
					case 132916898:
					{
						this.stderr = ((global::haxe.io.Output) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 929414088:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "waitSetup", 929414088)) );
					}
					
					
					case 1147073522:
					{
						return this.game;
					}
					
					
					case 209784577:
					{
						return this.output;
					}
					
					
					case 1042138122:
					{
						return this.input;
					}
					
					
					case 132916898:
					{
						return this.stderr;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 929414088:
					{
						this.waitSetup();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("game");
			baseArr.push("output");
			baseArr.push("input");
			baseArr.push("stderr");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


