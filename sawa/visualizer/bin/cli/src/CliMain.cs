// Generated by Haxe 3.4.2 (git build master @ 890f8c7)

#pragma warning disable 109, 114, 219, 429, 168, 162
public class CliMain : global::haxe.lang.HxObject {
	
	public static void Main(){
		global::cs.Boot.init();
		{
			global::CliMain.main();
		}
	}
	public CliMain(global::haxe.lang.EmptyObject empty) {
	}
	
	
	public CliMain() {
		global::CliMain.__hx_ctor__CliMain(this);
	}
	
	
	public static void __hx_ctor__CliMain(global::CliMain __hx_this) {
	}
	
	
	public static void main() {
		unchecked {
			global::Array<object> args = global::Sys.args();
			global::CliMode mode = null;
			if (( ( args.length > 0 ) && string.Equals(global::haxe.lang.Runtime.toString(args[0]), "on") )) {
				string host = "punter.inf.ed.ac.uk";
				int port = 9036;
				if (( args.length > 1 )) {
					port = (global::Std.parseInt(global::haxe.lang.Runtime.toString(args[1]))).@value;
				}
				
				if (( args.length > 2 )) {
					host = global::haxe.lang.Runtime.toString(args[2]);
				}
				
				mode = global::CliMode.On(host, port);
			}
			else {
				mode = global::CliMode.Off;
			}
			
			object io = global::CliMain.getIo(mode);
			global::game.GameClient client = new global::game.GameClient(((global::haxe.io.Input) (global::haxe.lang.Runtime.getField(io, "input", 1042138122, true)) ), ((global::haxe.io.Output) (global::haxe.lang.Runtime.getField(io, "output", 209784577, true)) ), new global::search.BeamSearcher(0.9, new global::eval.Evaluter(((global::Array<double>) (global::eval.Evaluter.MS_TABLE) ))));
			global::Date _this = new global::Date(((global::System.DateTime) (global::System.DateTime.Now) ));
			global::sys.io.File.saveContent(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("../../dashboard/static/logs/sawa@", global::haxe.lang.Runtime.toString(global::System.Math.Floor(((double) (( ((double) (((long) (( ((long) (global::System.TimeZone.CurrentTimeZone.ToUniversalTime(((global::System.DateTime) (_this.date) )).Ticks) ) - ((long) (global::Date.epochTicks) ) )) )) ) / ((double) (global::System.TimeSpan.TicksPerMillisecond) ) )) )))), ".log"), global::game.GameClient.result);
			((global::haxe.io.Output) (new global::cs.io.NativeOutput(((global::System.IO.Stream) (global::System.Console.OpenStandardError()) ))) ).writeString("finised\n");
		}
	}
	
	
	public static object getIo(global::CliMode mode) {
		unchecked {
			switch (mode.index) {
				case 0:
				{
					{
						System.Type __temp_dynop1 = typeof(global::game.GameClient);
						global::game.GameClient.result = global::haxe.lang.Runtime.concat(global::game.GameClient.result, "{you:\"shohei909\"}\n");
					}
					
					{
						global::haxe.io.Input __temp_odecl1 = ((global::haxe.io.Input) (new global::cs.io.NativeInput(((global::System.IO.Stream) (global::System.Console.OpenStandardInput()) ))) );
						global::haxe.io.Output __temp_odecl2 = ((global::haxe.io.Output) (new global::cs.io.NativeOutput(((global::System.IO.Stream) (global::System.Console.OpenStandardOutput()) ))) );
						return new global::haxe.lang.DynamicObject(new int[]{209784577, 1042138122}, new object[]{__temp_odecl2, __temp_odecl1}, new int[]{}, new double[]{});
					}
					
				}
				
				
				case 1:
				{
					int port = ((int) (global::haxe.lang.Runtime.toInt(mode.@params[1])) );
					string host = global::haxe.lang.Runtime.toString(mode.@params[0]);
					global::sys.net.Socket socket = new global::sys.net.Socket();
					socket.connect(new global::sys.net.Host(((string) (host) )), port);
					global::game.GameClient.writeData(socket.output, new global::haxe.lang.DynamicObject(new int[]{24408}, new object[]{"shohei909"}, new int[]{}, new double[]{}));
					global::game.GameClient.waitData(socket.input);
					return new global::haxe.lang.DynamicObject(new int[]{209784577, 1042138122}, new object[]{socket.output, socket.input}, new int[]{}, new double[]{});
				}
				
				
			}
			
			return null;
		}
	}
	
	
}


