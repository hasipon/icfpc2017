// Generated by Haxe 3.4.2 (git build master @ 890f8c7)

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace search {
	public class MoveAndScore : global::haxe.lang.HxObject {
		
		public MoveAndScore(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public MoveAndScore(object move) {
			global::search.MoveAndScore.__hx_ctor_search_MoveAndScore(this, move);
		}
		
		
		public static void __hx_ctor_search_MoveAndScore(global::search.MoveAndScore __hx_this, object move) {
			__hx_this.move = move;
			__hx_this.score = null;
			__hx_this.scores = new global::haxe.ds.IntMap<int>();
		}
		
		
		public static int compare(int id, global::search.MoveAndScore a, global::search.MoveAndScore b) {
			return global::Reflect.compare<double>(((double) (b.score.getFor(id)) ), ((double) (a.score.getFor(id)) ));
		}
		
		
		public object move;
		
		public global::eval.EvalutionResult score;
		
		public global::haxe.ds.IntMap<int> scores;
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1214309137:
					{
						this.move = ((object) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1164670177:
					{
						this.scores = ((global::haxe.ds.IntMap<int>) (global::haxe.ds.IntMap<object>.__hx_cast<int>(((global::haxe.ds.IntMap) (@value) ))) );
						return @value;
					}
					
					
					case 2027516754:
					{
						this.score = ((global::eval.EvalutionResult) (@value) );
						return @value;
					}
					
					
					case 1214309137:
					{
						this.move = ((object) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1164670177:
					{
						return this.scores;
					}
					
					
					case 2027516754:
					{
						return this.score;
					}
					
					
					case 1214309137:
					{
						return this.move;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1214309137:
					{
						return ((double) (global::haxe.lang.Runtime.toDouble(this.move)) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("scores");
			baseArr.push("score");
			baseArr.push("move");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


