// Generated by Haxe 3.4.2 (git build master @ 890f8c7)

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace search {
	public class Searcher : global::haxe.lang.HxObject {
		
		public Searcher(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Searcher(double timeout) {
			global::search.Searcher.__hx_ctor_search_Searcher(this, timeout);
		}
		
		
		public static void __hx_ctor_search_Searcher(global::search.Searcher __hx_this, double timeout) {
			__hx_this.timeout = timeout;
		}
		
		
		public double timeout;
		
		public virtual object getMove(global::game.Game game, int punter) {
			global::Array<object> livingRivers = game.getLivingRivers();
			global::Array<object> moves = new global::Array<object>(new object[]{});
			{
				int _g = 0;
				while (( _g < livingRivers.length )) {
					global::game.River river = ((global::game.River) (livingRivers[_g]) );
					 ++ _g;
					object __temp_stmt3 = null;
					{
						object __temp_odecl1 = new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{116192081, 842117339, 1860705976}, new double[]{((double) (river.b) ), ((double) (river.a) ), ((double) (punter) )});
						__temp_stmt3 = new global::haxe.lang.DynamicObject(new int[]{1213755260}, new object[]{__temp_odecl1}, new int[]{}, new double[]{});
					}
					
					moves.push(__temp_stmt3);
				}
				
			}
			
			object __temp_stmt4 = null;
			{
				object __temp_odecl2 = new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{1860705976}, new double[]{((double) (punter) )});
				__temp_stmt4 = new global::haxe.lang.DynamicObject(new int[]{1246880977}, new object[]{__temp_odecl2}, new int[]{}, new double[]{});
			}
			
			moves.push(__temp_stmt4);
			return moves[0];
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1492589217:
					{
						this.timeout = ((double) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1492589217:
					{
						this.timeout = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 451121863:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "getMove", 451121863)) );
					}
					
					
					case 1492589217:
					{
						return this.timeout;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1492589217:
					{
						return this.timeout;
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 451121863:
					{
						return this.getMove(((global::game.Game) (dynargs[0]) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("timeout");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


