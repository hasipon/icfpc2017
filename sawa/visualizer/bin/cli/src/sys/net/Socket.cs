// Generated by Haxe 3.4.2 (git build master @ 890f8c7)

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace sys.net {
	public class Socket : global::haxe.lang.HxObject {
		
		public Socket(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Socket() {
			global::sys.net.Socket.__hx_ctor_sys_net_Socket(this);
		}
		
		
		public static void __hx_ctor_sys_net_Socket(global::sys.net.Socket __hx_this) {
			__hx_this.sock = null;
			__hx_this.sock = new global::System.Net.Sockets.Socket(global::System.Net.Sockets.AddressFamily.InterNetwork, global::System.Net.Sockets.SocketType.Stream, global::System.Net.Sockets.ProtocolType.Tcp);
			__hx_this.sock.Blocking = ((bool) (true) );
		}
		
		
		public global::System.Net.Sockets.Socket sock;
		
		public global::haxe.io.Input input;
		
		public global::haxe.io.Output output;
		
		public virtual void connect(global::sys.net.Host host, int port) {
			this.sock.Connect(((global::System.Net.IPAddress) (host.ipAddress) ), ((int) (port) ));
			if (this.sock.Connected) {
				this.output = new global::cs.io.NativeOutput(((global::System.IO.Stream) (new global::System.Net.Sockets.NetworkStream(this.sock)) ));
				this.input = new global::cs.io.NativeInput(((global::System.IO.Stream) (new global::System.Net.Sockets.NetworkStream(this.sock)) ));
			}
			else {
				throw global::haxe.lang.HaxeException.wrap("Connection failed.");
			}
			
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 209784577:
					{
						this.output = ((global::haxe.io.Output) (@value) );
						return @value;
					}
					
					
					case 1042138122:
					{
						this.input = ((global::haxe.io.Input) (@value) );
						return @value;
					}
					
					
					case 1280842308:
					{
						this.sock = ((global::System.Net.Sockets.Socket) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 360725482:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "connect", 360725482)) );
					}
					
					
					case 209784577:
					{
						return this.output;
					}
					
					
					case 1042138122:
					{
						return this.input;
					}
					
					
					case 1280842308:
					{
						return this.sock;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 360725482:
					{
						this.connect(((global::sys.net.Host) (dynargs[0]) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("output");
			baseArr.push("input");
			baseArr.push("sock");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


