// Generated by Haxe 3.4.2 (git build master @ 890f8c7)

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace sys.net {
	public class Host : global::haxe.lang.HxObject {
		
		public Host(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Host(string name) {
			global::sys.net.Host.__hx_ctor_sys_net_Host(this, name);
		}
		
		
		public static void __hx_ctor_sys_net_Host(global::sys.net.Host __hx_this, string name) {
			__hx_this.host = name;
			__hx_this.hostEntry = global::System.Net.Dns.GetHostEntry(((string) (name) ));
			{
				int _g1 = 0;
				int _g = ( __hx_this.hostEntry.AddressList as global::System.Array ).Length;
				while (( _g1 < _g )) {
					int i = _g1++;
					if (( __hx_this.hostEntry.AddressList[i].AddressFamily == global::System.Net.Sockets.AddressFamily.InterNetwork )) {
						__hx_this.ipAddress = __hx_this.hostEntry.AddressList[i];
						break;
					}
					
				}
				
			}
			
		}
		
		
		public global::System.Net.IPHostEntry hostEntry;
		
		public global::System.Net.IPAddress ipAddress;
		
		public string host;
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1158860648:
					{
						this.host = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 1970444429:
					{
						this.ipAddress = ((global::System.Net.IPAddress) (@value) );
						return @value;
					}
					
					
					case 305151978:
					{
						this.hostEntry = ((global::System.Net.IPHostEntry) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1158860648:
					{
						return this.host;
					}
					
					
					case 1970444429:
					{
						return this.ipAddress;
					}
					
					
					case 305151978:
					{
						return this.hostEntry;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("host");
			baseArr.push("ipAddress");
			baseArr.push("hostEntry");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


